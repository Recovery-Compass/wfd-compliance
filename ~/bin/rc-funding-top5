#!/usr/bin/env bash
# Recovery Compass Top 5 Funding Dashboard Launcher
# Serves dual-table dashboard at http://localhost:4321/funding/top5

set -euo pipefail

# Configuration
PORT=4321
PROJECT_DIR="$HOME/Projects/wfd-sunrise-path/WFD-Sunrise-Path"
SCRIPT_PATH="$PROJECT_DIR/scripts/rc_funding_top5.py"
OUTPUT_DIR="$PROJECT_DIR/out"

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Display branding
echo -e "${BLUE}🧭 Recovery Compass Top 5 Funding Intelligence${NC}"
echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"

# Check if Python script exists
if [ ! -f "$SCRIPT_PATH" ]; then
    echo -e "${RED}❌ Script not found at: $SCRIPT_PATH${NC}"
    exit 1
fi

# Kill any existing server on port 4321
if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo -e "${YELLOW}⚠️  Stopping existing server on port $PORT...${NC}"
    kill $(lsof -Pi :$PORT -sTCP:LISTEN -t) 2>/dev/null || true
    sleep 1
fi

# Step 1: Run data pipeline to generate dashboard
echo -e "${BLUE}📊 Generating Top 5 funding dashboard...${NC}"
cd "$PROJECT_DIR"
python3 "$SCRIPT_PATH" --output "$OUTPUT_DIR" --no-browser

# Check if output was created
if [ ! -f "$OUTPUT_DIR/funding/top5.html" ]; then
    echo -e "${RED}❌ Dashboard generation failed${NC}"
    exit 1
fi

echo -e "${GREEN}✅ Dashboard generated successfully${NC}"

# Step 2: Start HTTP server
echo -e "${BLUE}🚀 Starting web server on port $PORT...${NC}"
cd "$OUTPUT_DIR"
python3 -m http.server $PORT --bind 0.0.0.0 > /dev/null 2>&1 &
SERVER_PID=$!

# Step 3: Health check loop (max 5 seconds)
echo -n "Waiting for server readiness"
for i in {1..5}; do
    if curl -s "http://localhost:$PORT/funding/top5.html" >/dev/null 2>&1; then
        echo -e "\n${GREEN}✅ Server ready${NC}"
        break
    fi
    echo -n "."
    sleep 1
done

# Step 4: Open browser
echo -e "${BLUE}🌐 Opening dashboard in browser...${NC}"
DASHBOARD_URL="http://localhost:$PORT/funding/top5.html"

# Try Arc browser first, fallback to default
if command -v open >/dev/null 2>&1; then
    if open -a "Arc" "$DASHBOARD_URL" 2>/dev/null; then
        echo -e "${GREEN}✅ Launched in Arc browser${NC}"
    else
        echo -e "${YELLOW}Arc browser not found, using default browser...${NC}"
        open "$DASHBOARD_URL"
        echo -e "${GREEN}✅ Launched in default browser${NC}"
    fi
else
    echo -e "${YELLOW}⚠️  Unable to auto-open browser${NC}"
    echo -e "${BLUE}   Please navigate to: $DASHBOARD_URL${NC}"
fi

# Summary
echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${GREEN}✨ Recovery Compass Top 5 Dashboard is ready!${NC}"
echo -e "${BLUE}   URL: $DASHBOARD_URL${NC}"
echo -e "${BLUE}   Port: $PORT${NC}"
echo -e "${BLUE}   Process ID: $SERVER_PID${NC}"
echo -e "${BLUE}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"

# Keep script running
echo -e "\n${YELLOW}Press Ctrl+C to stop the server${NC}"
trap "kill $SERVER_PID 2>/dev/null; echo -e '\n${GREEN}Server stopped${NC}'" EXIT
wait $SERVER_PID
